#!/bin/bash
#
#       /etc/rc.d/init.d/consul
#
#       Daemonize the consul agent.
#
# chkconfig:   2345 95 95
# description: Service discovery and configuration made easy. \
#  Distributed, highly available, and datacenter-aware.
# processname: consul
# pidfile: /var/run/consul/pidfile

# Source function library.
. /etc/init.d/functions
<% config_ports = scope.lookupvar('consul::config::config_ports') -%>
CONSUL=<%= scope.lookupvar('consul::bin_dir') %>/consul
CONFIG=<%= scope.lookupvar('consul::config_dir') %>
PID_FILE=/var/run/consul/consul.pid
LOG_FILE=/var/log/consul
RETRY=240
SS_BIN=`which ss`

[ -e /etc/sysconfig/consul ] && . /etc/sysconfig/consul

export GOMAXPROCS=${GOMAXPROCS:-2}

#
# Create the /var/run/consul directory, which can live on a tmpfs
# filesystem and be destroyed between reboots.
#
mkrundir() {
        [ ! -d /var/run/consul ] && mkdir -p /var/run/consul
        chown <%= scope.lookupvar('consul::user') %> /var/run/consul
}

#
# Create a PID file if it doesn't already exist, for clean upgrades
# from previous init-script controlled daemons.
#
KILLPROC_OPT="-p ${PID_FILE}"
mkpidfile() {
        # Create PID file if it didn't exist
        mkrundir
        [ ! -f $PID_FILE ] && pidofproc $CONSUL > $PID_FILE
        chown <%= scope.lookupvar('consul::user') %> /var/run/consul
        if [ $? -ne 0 ] ; then
            rm $PID_FILE
            KILLPROC_OPT=""
        fi
}

start() {
        echo -n "Starting consul: "
        mkrundir
        [ -f $PID_FILE ] && rm $PID_FILE
        daemon --user=<%= scope.lookupvar('consul::user') %> \
            --pidfile="$PID_FILE" \
            "$CONSUL" agent -pid-file "${PID_FILE}" -config-dir "$CONFIG" <%= scope.lookupvar('consul::extra_options') %> >> "$LOG_FILE" &
        retcode=$?
        touch /var/lock/subsys/consul
        return $retcode
}

stop() {
        echo -n "Shutting down consul: "
        # If consul is not acting as a server, exit gracefully
        if ("${CONSUL}" info 2>/dev/null | grep -q 'server = false' 2>/dev/null) ; then
            "$CONSUL" leave
	fi
        <% first_loop=0 %>
        for (( i=1; i<=$RETRY; i++ ))
	do
	    if [ "`$SS_BIN -nao '( <% config_ports.keys.sort.each do |key| -%><% if config_ports[key] > 0 %><% if first_loop == 0 %>sport = :<%=config_ports[key]-%><% first_loop=1 %><% else %> or sport = :<%=config_ports[key]-%><% end %><% end %><% end -%> )' | wc -l`" -gt 1 ];
	    then
	        /bin/echo "Waiting one more second to stop consul (check $i) "
	       /bin/sleep 1
	   else
	      break
	   fi
	done	
        # If acting as a server, or if leave failed, kill it.
        mkpidfile
        killproc $KILLPROC_OPT $CONSUL -9

        retcode=$?
        rm -f /var/lock/subsys/consul $PID_FILE
        return $retcode
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        "$CONSUL" info
        ;;
    restart)
        stop
        start
        ;;
    reload)
        mkpidfile
        killproc $KILLPROC_OPT $CONSUL -HUP
        ;;
    condrestart)
        [ -f /var/lock/subsys/consul ] && restart || :
        ;;
    *)
        echo "Usage: consul {start|stop|status|reload|restart}"
        exit 1
        ;;
esac
exit $?
